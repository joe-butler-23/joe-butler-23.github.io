function createCorrelationHeatmap(a){const t={top:50,right:80,bottom:100,left:100},e=600,r=600,o=d3.select(`#${a}`).append("svg").attr("viewBox",`0 0 ${e+t.left+t.right} ${r+t.top+t.bottom}`).append("g").attr("transform",`translate(${t.left},${t.top})`),i=d3.scaleBand().domain(variables).range([0,e]).padding(.05),l=d3.scaleBand().domain(variables).range([0,r]).padding(.05),n=d3.scaleSequential().interpolator(d3.interpolateRdBu).domain([1,-1]);o.append("g").attr("transform",`translate(0, ${r})`).call(d3.axisBottom(i)).selectAll("text").style("text-anchor","end").attr("dx","-.8em").attr("dy",".15em").attr("transform","rotate(-65)"),o.append("g").call(d3.axisLeft(l));const s=d3.select("body").append("div").style("position","absolute").style("background","rgba(255,255,255,0.9)").style("padding","8px").style("border","1px solid #ccc").style("border-radius","4px").style("pointer-events","none").style("opacity",0);o.selectAll().data(matrix).enter().append("rect").attr("x",(a=>i(a.variable1))).attr("y",(a=>l(a.variable2))).attr("width",i.bandwidth()).attr("height",l.bandwidth()).style("fill",(a=>n(a.correlation))).on("mouseover",(function(a,t){d3.select(this).style("stroke","#000").style("stroke-width","1px"),s.transition().duration(200).style("opacity",.9),s.html(`<strong>${t.variable1} vs ${t.variable2}</strong><br>Correlation: ${t.correlation.toFixed(3)}`).style("left",a.pageX+15+"px").style("top",a.pageY-28+"px")})).on("mouseout",(function(){d3.select(this).style("stroke","none"),s.transition().duration(500).style("opacity",0)}));const d=o.append("defs").append("linearGradient").attr("id","correlation-gradient").attr("x1","0%").attr("y1","100%").attr("x2","0%").attr("y2","0%");d.append("stop").attr("offset","0%").attr("stop-color",n(1)),d.append("stop").attr("offset","50%").attr("stop-color",n(0)),d.append("stop").attr("offset","100%").attr("stop-color",n(-1)),o.append("rect").attr("x",e+20).attr("y",0).attr("width",20).attr("height",r).style("fill","url(#correlation-gradient)");const c=d3.scaleLinear().domain([-1,1]).range([r,0]);o.append("g").attr("transform",`translate(${e+40}, 0)`).call(d3.axisRight(c).ticks(5).tickFormat(d3.format(".1f"))),o.append("text").attr("x",e/2).attr("y",-20).style("text-anchor","middle").style("font-size","18px").style("font-weight","600").text("Correlation Heatmap of Obesity Risk Factors")}const correlationData=[{variable1:"Age",variable2:"TUE",correlation:-.297},{variable1:"CH2O",variable2:"FAF",correlation:.167},{variable1:"Age",variable2:"FAF",correlation:-.145},{variable1:"FAF",variable2:"NCP",correlation:.13},{variable1:"FAF",variable2:"TUE",correlation:.059},{variable1:"CH2O",variable2:"NCP",correlation:.057},{variable1:"Age",variable2:"CH2O",correlation:-.045},{variable1:"Age",variable2:"NCP",correlation:-.044},{variable1:"NCP",variable2:"TUE",correlation:.036},{variable1:"CH2O",variable2:"TUE",correlation:.012}],variables=Array.from(new Set([...correlationData.map((a=>a.variable1)),...correlationData.map((a=>a.variable2))])),matrix=[];variables.forEach((a=>{variables.forEach((t=>{if(a===t)matrix.push({variable1:a,variable2:t,correlation:1});else{const e=correlationData.find((e=>e.variable1===a&&e.variable2===t||e.variable1===t&&e.variable2===a));matrix.push({variable1:a,variable2:t,correlation:e?e.correlation:0})}}))}));